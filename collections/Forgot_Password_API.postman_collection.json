{
  "info": {
    "name": "Forgot Password API",
    "description": "API collection for testing the forgot password functionality",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1. Request Password Reset",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/forgot-password/{{test_email}}",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "forgot-password", "{{test_email}}"]
        },
        "description": "Initiates the forgot password process by sending an OTP to the specified email address."
      },
      "response": []
    },
    {
      "name": "2. Validate Password Reset",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"otp\": \"{{received_otp}}\",\n  \"newPassword\": \"mynewpassword123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/validate/password",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "validate", "password"]
        },
        "description": "Validates the OTP and resets the user's password."
      },
      "response": []
    },
    {
      "name": "3. Test Invalid Email Format",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/forgot-password/invalid-email",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "forgot-password", "invalid-email"]
        },
        "description": "Tests validation for invalid email format."
      },
      "response": []
    },
    {
      "name": "4. Test Non-existent User",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/forgot-password/nonexistent@example.com",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "forgot-password", "nonexistent@example.com"]
        },
        "description": "Tests request for a user that doesn't exist in the database."
      },
      "response": []
    },
    {
      "name": "5. Test Invalid OTP",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"otp\": \"000000\",\n  \"newPassword\": \"testpassword123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/validate/password",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "validate", "password"]
        },
        "description": "Tests password reset with an invalid OTP."
      },
      "response": []
    },
    {
      "name": "6. Test Short Password",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"otp\": \"123456\",\n  \"newPassword\": \"123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/validate/password",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "validate", "password"]
        },
        "description": "Tests password validation for passwords shorter than 6 characters."
      },
      "response": []
    },
    {
      "name": "7. Test Invalid OTP Format",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"otp\": \"12345\",\n  \"newPassword\": \"testpassword123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/validate/password",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "validate", "password"]
        },
        "description": "Tests OTP validation for invalid format (not 6 digits)."
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "description": "Base URL for the API server"
    },
    {
      "key": "test_email",
      "value": "test@example.com",
      "description": "Email address for testing (should exist in your database)"
    },
    {
      "key": "received_otp",
      "value": "123456",
      "description": "OTP received via email (update this with actual OTP)"
    }
  ]
}
